name: Build ARM64 Container for Testing

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - '.github/workflows/build-arm64-container.yml'
      - 'scripts/**'
      - 'templates/**'
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday at midnight UTC

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    name: Build and Push ARM64 Container
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Step 2: Set up QEMU for cross-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      
      # Step 3: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      # Step 4: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      # Step 5: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      # Step 6: Extract metadata for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/legit
          tags: |
            type=raw,value=latest
            type=sha,format=short
            type=schedule,pattern={{date 'YYYYMMDD'}}
      
      # Step 7: Build and push Docker image to ECR
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      # Step 8: Output image URI for reference
      - name: Image URI
        run: |
          echo "Image URI: ${{ steps.meta.outputs.tags }}"
          echo "To pull this image locally:"
          echo "docker pull $(echo ${{ steps.meta.outputs.tags }} | head -n 1)"

